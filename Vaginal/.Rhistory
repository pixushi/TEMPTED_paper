dev.off()
pdf('../figure_table/vaginal_plot.pdf', width=8, height=4)
grid.arrange(p_sub_box, p_bar, p_feat_ratio_summary, layout_matrix=lay)
dev.off()
lay <- matrix(c(1,1,2,2,2,2,3,3,3),1,)
pdf('../figure_table/vaginal_plot.pdf', width=8, height=3.5)
grid.arrange(p_sub_box, p_bar, p_feat_ratio_summary, layout_matrix=lay)
dev.off()
sub_vaginal <- read.csv("result/Vaginal_microbiome_subject_loadings.csv",
row.names=1)
sub_vaginal$group2 <- ifelse(sub_vaginal$group=="TB", "Term", "Preterm")
with(sub_vaginal, table(group, group2))
pval <- round(wilcox.test(sub_vaginal$Component.1~sub_vaginal$group2)$p.value,4)
pval
p_sub_box <- ggplot(sub_vaginal) +
geom_boxplot(aes(x=group, y=Component.1, fill=group2)) +
theme_bw() + scale_fill_manual(values=color_RB) +
labs(x="Outcome") +
theme(legend.position="none") +
annotate("text", x=1.5, y=0.22, label= paste0("p-value = ", pval))
p_sub_box
p_sub_box <- ggplot(sub_vaginal) +
geom_boxplot(aes(x=group2, y=Component.1, fill=group2)) +
theme_bw() + scale_fill_manual(values=color_RB) +
labs(x="Outcome") +
theme(legend.position="none") +
annotate("text", x=1.5, y=0.22, label= paste0("p-value = ", pval))
p_sub_box
lay <- matrix(c(1,1,2,2,2,2,3,3,3),1,)
pdf('../figure_table/vaginal_plot.pdf', width=8, height=3.5)
grid.arrange(p_sub_box, p_bar, p_feat_ratio_summary, layout_matrix=lay)
dev.off()
lay <- matrix(c(1,1,2,2,2,2,3,3,3),1,)
pdf('../figure_table/vaginal_plot.pdf', width=8, height=4.5)
grid.arrange(p_sub_box, p_bar, p_feat_ratio_summary, layout_matrix=lay)
dev.off()
rm(list=ls())
library(gridExtra)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(RColorBrewer)
library(ggpubr)
# set working directory to be where the current script is located
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
source('../TEMPTED.R')
color_RB <- brewer.pal(3,'Set1')[1:2]
#######################################
#### Plot feature loading bar plot ####
tb_vaginal <- read.csv("result/Vaginal_microbiome_feature_loadings_w_taxonomy.csv", row.names=1, sep=",")
sel <- tb_vaginal$Component.1 %>% (function(x){which(abs(x)>=quantile(abs(x),0.95))})
tb_vaginal_sel <- tb_vaginal[sel,] %>% mutate(sign=ifelse(Component.1<0,"Preterm","Term"))
# get species labels, if NA, use family labels
label_s <- substring(tb_vaginal_sel$Species, 4, 30)
label_f <- substring(tb_vaginal_sel$Family, 4, 30)
label_s[which(nchar(label_s)==0)] <- label_f[which(nchar(label_s)==0)]
tb_vaginal_sel$label <- paste0(label_s,
" PG", substring(rownames(tb_vaginal_sel),5,6))
tb_vaginal_sel <- tb_vaginal_sel %>% arrange(-Component.1)
tb_vaginal_sel$label <- factor(tb_vaginal_sel$label, levels=unique(tb_vaginal_sel$label))
p_bar <- tb_vaginal_sel %>%
ggplot(aes(x=label, y=Component.1)) +
geom_bar(stat="identity", colour="black", width = 0.5, aes(fill = sign)) +
geom_hline(yintercept = 0) +
theme_bw() +
scale_fill_manual(values=color_RB) +
coord_flip() +
labs(y = "Component 1", x = "") +
theme(legend.position="none")
p_bar
#######################################
#### Plot feature loading bar plot ####
ratio_vaginal <- read.csv("result/Vaginal_microbiome_log_ratios_per_sample_Pixu.csv", row.names=1, sep=",")
ratio_vaginal <- filter(ratio_vaginal, !is.na(Log_ratios))
ratio_vaginal$Group2 <- ifelse(ratio_vaginal$Group=="TB", "Term", "Preterm")
with(ratio_vaginal, table(Group, Group2))
time_vec_ratio <- ratio_vaginal$Timepoint
group_vec_ratio <- factor(ratio_vaginal$Group2)
feature_mat_ratio <- ratio_vaginal[,4, drop=FALSE]
p_feat_ratio_summary <- plot_feature_summary(feature_mat_ratio,
time_vec_ratio,
group_vec_ratio, bws=8, nrow=1) +
xlab('Gestational Week') + theme_bw() +
theme(legend.position=c(0.85,0.15),
legend.background = element_rect(fill="white", size=0.2, linetype="solid",
colour ="black")) +
scale_fill_manual("Outcome", values=color_RB) +
scale_color_manual("Outcome", values=color_RB) +
theme(strip.text = element_blank(),
strip.background = element_blank())
p_feat_ratio_summary
#########################################
#### plot boxplot of subject loading ####
sub_vaginal <- read.csv("result/Vaginal_microbiome_subject_loadings.csv",
row.names=1)
sub_vaginal$group2 <- ifelse(sub_vaginal$group=="TB", "Term", "Preterm")
with(sub_vaginal, table(group, group2))
pval <- round(wilcox.test(sub_vaginal$Component.1~sub_vaginal$group2)$p.value,4)
pval
p_sub_box <- ggplot(sub_vaginal) +
geom_boxplot(aes(x=group2, y=Component.1, fill=group2)) +
theme_bw() + scale_fill_manual(values=color_RB) +
labs(x="Outcome") +
theme(legend.position="none") +
annotate("text", x=1.5, y=0.22, label= paste0("p-value = ", pval))
p_sub_box
lay <- matrix(c(1,1,2,2,2,2,3,3,3),1,)
pdf('../figure_table/vaginal_plot.pdf', width=16, height=3.5)
grid.arrange(p_sub_box, p_bar, p_feat_ratio_summary, layout_matrix=lay)
dev.off()
rm(list=ls())
library(readr)
library(qiime2R)
library(phyloseq)
library(gridExtra)
library(ggplot2)
library(vegan)
library(dplyr)
library(tidyverse)
library(RColorBrewer)
library(ggpubr)
#library(magrittr)
library(pROC)
# set working directory to be where the current script is located
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
source('../TEMPTED.R')
color_RB <- brewer.pal(3,'Set1')[1:2]
# Get data in 2nd and 3rd trimester
load("data/data_post.RData")
metadata_all <- post.df %>%
filter(DayVsDel < 0, LibrarySize >= 4e4, PregOut!="Miscarriage") %>%
select(Cohort, SampleID, PregID, DayVsConc, DayVsDel, PregOut, GDdel) %>%
group_by(PregID) %>% filter(n() > 1) %>% ungroup()
head(metadata_all)
metadata <- metadata_all %>% filter(DayVsConc >= 12*7, DayVsConc < 37*7)
load('result/res_delivery_tempted.Rdata')
count_tab <- data.frame(otu_table(ps_filtered))
meta_tab <- data.frame(sample_data(ps_filtered))
res_tempted <- res_tempted_conc
svd_tempted <- svd_conc
datlist <- datlist_conc
datlist_raw <- datlist_raw_conc
npc <- 2
p_time <- plot_time_loading(res_tempted, r=npc) +
labs(x='Week', y="Temporal Loading", title=" ", color="Component") +
geom_line(size=1.5) + theme_bw() +
theme(legend.position='bottom')
p_time
metauni <- unique(meta_tab[,c('PregID', 'PregOut')])
rownames(metauni) <- metauni$PregID
A.hat <- metauni
rownames(A.hat) <- A.hat$PregID
table(rownames(A.hat)==rownames(res_tempted$A.hat))
A.hat <- cbind(res_tempted$A.hat[,1:npc], A.hat)
A.hat$PregOut <- as.factor(A.hat$PregOut)
pval <- round(wilcox.test(A.hat$`Component 1`~A.hat$PregOut)$p.value,4)
pval
p_sub_box <- ggplot(A.hat) +
geom_boxplot(aes(x=PregOut, y=`Component 1`, fill=PregOut)) +
theme_bw() + scale_fill_manual(values=color_RB) +
labs(x="Outcome") +
theme(legend.position="none") +
annotate("text", x=1.5, y=0.15, label= paste0("p-value = ", pval))
p_sub_box
res_glm <- with(A.hat, glm(I(PregOut=='Term') ~`Component 1`+`Component 2`,
family=binomial(link = "logit")))
auc(res_glm$y, predict.glm(res_glm, type="response"))
contrast <- NULL
ratio_feat <- ratio_feature(res_tempted, datlist_raw,
contrast=contrast, pct=0.05,
absolute=TRUE)
tab_feat_ratio <- ratio_feat$metafeature.ratio
colnames(tab_feat_ratio)[2] <- 'PregID'
tab_feat_ratio <- merge(tab_feat_ratio, metauni)
## summed up, by mean and sd
reshape_feat_ratio <- reshape(tab_feat_ratio,
idvar=c("PregID","timepoint") ,
v.names=c("value"), timevar="PC",
direction="wide")
CC <- grep('Component',colnames(reshape_feat_ratio))
colnames(reshape_feat_ratio)[CC] <- paste('Component', 1:npc)
feature_mat_ratio <- reshape_feat_ratio[,CC]
colnames(feature_mat_ratio) <- paste("Component", 1:npc)
time_vec_ratio <- reshape_feat_ratio$timepoint
group_vec_ratio <- factor(reshape_feat_ratio$PregOut)
p_feat_ratio_summary <- plot_feature_summary(feature_mat_ratio,
time_vec_ratio,
group_vec_ratio, bws=12, nrow=1)
feature_mat_ratio1 <- feature_mat_ratio[,1,drop=FALSE]
colnames(feature_mat_ratio1) <- "Component 1"
p_feat_ratio_summary <- plot_feature_summary(feature_mat_ratio1,
time_vec_ratio,
group_vec_ratio, bws=12, nrow=1) +
xlab('Gestational Day') + theme_bw() +
theme(legend.position=c(0.85,0.15),
legend.background = element_rect(fill="white", size=0.2, linetype="solid",
colour ="black")) +
scale_fill_manual("Outcome", values=color_RB) +
scale_color_manual("Outcome", values=color_RB) +
scale_x_continuous(breaks=seq(from=84,to=294,by=28)) + ylim(c(-3.5, 7.5))+
theme(strip.text = element_blank(),
strip.background = element_blank())
p_feat_ratio_summary
# taxanomic information of top and bottom bacteria
sum(ratio_feat$toppct[,1])
sum(ratio_feat$bottompct[,1])
tab_taxa <- rbind(tax_table(ps_filtered)[names(which(ratio_feat$toppct[,1])),],
tax_table(ps_filtered)[names(which(ratio_feat$bottompct[,1])),])
tab_taxa <-as.data.frame(tab_taxa)
tab_taxa$loading_PC1 <- res_tempted$B.hat[rownames(tab_taxa),1]
write.csv(tab_taxa, file="../figure_table/vaginal_Stanford_topfeat.csv")
rownames(tab_taxa) <- NULL
tab_taxa
# barplot
tab_taxa <- tab_taxa %>% mutate(outcome=ifelse(loading_PC1<0,"Preterm","Term"))
tab_taxa$label <- paste0(substring(tab_taxa$asvLab, 6, 50), " ",
tab_taxa$asvNum)
tab_taxa <- tab_taxa %>% arrange(-loading_PC1)
tab_taxa$label <- factor(tab_taxa$label, levels=unique(tab_taxa$label))
p_bar <- tab_taxa %>%
ggplot(aes(x=label, y=loading_PC1)) +
geom_bar(stat="identity", colour="black", width = 0.5, aes(fill = outcome)) +
geom_hline(yintercept = 0) +
theme_bw() +
scale_fill_manual(values=color_RB) +
coord_flip() +
labs(y = "Component 1", x = "") +
theme(legend.position="none")
p_bar
lay <- matrix(c(1,1,2,2,2,2,3,3,3),1,)
pdf('../figure_table/vaginal_Stanford_plot.pdf', width=16, height=3.5)
grid.arrange(p_sub_box, p_bar, p_feat_ratio_summary, layout_matrix=lay)
dev.off()
rm(list=ls())
library(gridExtra)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(RColorBrewer)
library(ggpubr)
# set working directory to be where the current script is located
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
source('../TEMPTED.R')
color_RB <- brewer.pal(3,'Set1')[1:2]
tb_vaginal <- read.csv("result/Vaginal_microbiome_feature_loadings_w_taxonomy.csv", row.names=1, sep=",")
# top 10 in absolute value
sel <- tb_vaginal$Component.1 %>% (function(x){which(abs(x)>=sort(abs(x))[10])})
tb_vaginal_sel <- tb_vaginal[sel,] %>% mutate(sign=ifelse(Component.1<0,"Preterm","Term"))
# get species labels, if NA, use family labels
label_s <- substring(tb_vaginal_sel$Species, 4, 30)
label_f <- substring(tb_vaginal_sel$Family, 4, 30)
label_s[which(nchar(label_s)==0)] <- label_f[which(nchar(label_s)==0)]
tb_vaginal_sel$label <- paste0(label_s,
" PG", substring(rownames(tb_vaginal_sel),5,6))
tb_vaginal_sel <- tb_vaginal_sel %>% arrange(-Component.1)
tb_vaginal_sel$label <- factor(tb_vaginal_sel$label, levels=unique(tb_vaginal_sel$label))
p_bar <- tb_vaginal_sel %>%
ggplot(aes(x=label, y=Component.1)) +
geom_bar(stat="identity", colour="black", width = 0.5, aes(fill = sign)) +
geom_hline(yintercept = 0) +
theme_bw() +
scale_fill_manual(values=color_RB) +
coord_flip() +
labs(y = "Component 1", x = "") +
theme(legend.position="none")
p_bar
# top 10 in absolute value
sel <- tb_vaginal$Component.1 %>% (function(x){which(abs(x)>=sort(-abs(x))[10])})
tb_vaginal_sel <- tb_vaginal[sel,] %>% mutate(sign=ifelse(Component.1<0,"Preterm","Term"))
# get species labels, if NA, use family labels
label_s <- substring(tb_vaginal_sel$Species, 4, 30)
label_f <- substring(tb_vaginal_sel$Family, 4, 30)
label_s[which(nchar(label_s)==0)] <- label_f[which(nchar(label_s)==0)]
tb_vaginal_sel$label <- paste0(label_s,
" PG", substring(rownames(tb_vaginal_sel),5,6))
tb_vaginal_sel <- tb_vaginal_sel %>% arrange(-Component.1)
tb_vaginal_sel$label <- factor(tb_vaginal_sel$label, levels=unique(tb_vaginal_sel$label))
p_bar <- tb_vaginal_sel %>%
ggplot(aes(x=label, y=Component.1)) +
geom_bar(stat="identity", colour="black", width = 0.5, aes(fill = sign)) +
geom_hline(yintercept = 0) +
theme_bw() +
scale_fill_manual(values=color_RB) +
coord_flip() +
labs(y = "Component 1", x = "") +
theme(legend.position="none")
p_bar
table(sel)
x=tb_vaginal$Component.1
sort(-abs(x))[10]
?sort
# top 10 in absolute value
sel <- tb_vaginal$Component.1 %>% (function(x){which(abs(x)>=sort(abs(x),decreasing=T)[10])})
sel
rm(list=ls())
library(gridExtra)
library(ggplot2)
library(dplyr)
library(tidyverse)
library(RColorBrewer)
library(ggpubr)
# set working directory to be where the current script is located
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
source('../TEMPTED.R')
color_RB <- brewer.pal(3,'Set1')[1:2]
#######################################
#### Plot feature loading bar plot ####
tb_vaginal <- read.csv("result/Vaginal_microbiome_feature_loadings_w_taxonomy.csv", row.names=1, sep=",")
# top 10 in absolute value
sel <- tb_vaginal$Component.1 %>% (function(x){which(abs(x)>=sort(abs(x),decreasing=T)[10])})
tb_vaginal_sel <- tb_vaginal[sel,] %>% mutate(sign=ifelse(Component.1<0,"Preterm","Term"))
# get species labels, if NA, use family labels
label_s <- substring(tb_vaginal_sel$Species, 4, 30)
label_f <- substring(tb_vaginal_sel$Family, 4, 30)
label_s[which(nchar(label_s)==0)] <- label_f[which(nchar(label_s)==0)]
tb_vaginal_sel$label <- paste0(label_s,
" PG", substring(rownames(tb_vaginal_sel),5,6))
tb_vaginal_sel <- tb_vaginal_sel %>% arrange(-Component.1)
tb_vaginal_sel$label <- factor(tb_vaginal_sel$label, levels=unique(tb_vaginal_sel$label))
p_bar <- tb_vaginal_sel %>%
ggplot(aes(x=label, y=Component.1)) +
geom_bar(stat="identity", colour="black", width = 0.5, aes(fill = sign)) +
geom_hline(yintercept = 0) +
theme_bw() +
scale_fill_manual(values=color_RB) +
coord_flip() +
labs(y = "Component 1", x = "") +
theme(legend.position="none")
p_bar
#######################################
#### Plot feature loading bar plot ####
ratio_vaginal <- read.csv("result/Vaginal_microbiome_log_ratios_per_sample_Pixu.csv", row.names=1, sep=",")
ratio_vaginal <- filter(ratio_vaginal, !is.na(Log_ratios))
ratio_vaginal$Group2 <- ifelse(ratio_vaginal$Group=="TB", "Term", "Preterm")
with(ratio_vaginal, table(Group, Group2))
time_vec_ratio <- ratio_vaginal$Timepoint
group_vec_ratio <- factor(ratio_vaginal$Group2)
feature_mat_ratio <- ratio_vaginal[,4, drop=FALSE]
p_feat_ratio_summary <- plot_feature_summary(feature_mat_ratio,
time_vec_ratio,
group_vec_ratio, bws=8, nrow=1) +
xlab('Gestational Week') + theme_bw() +
theme(legend.position=c(0.85,0.15),
legend.background = element_rect(fill="white", size=0.2, linetype="solid",
colour ="black")) +
scale_fill_manual("Outcome", values=color_RB) +
scale_color_manual("Outcome", values=color_RB) +
theme(strip.text = element_blank(),
strip.background = element_blank())
p_feat_ratio_summary
#########################################
#### plot boxplot of subject loading ####
sub_vaginal <- read.csv("result/Vaginal_microbiome_subject_loadings.csv",
row.names=1)
sub_vaginal$group2 <- ifelse(sub_vaginal$group=="TB", "Term", "Preterm")
with(sub_vaginal, table(group, group2))
pval <- round(wilcox.test(sub_vaginal$Component.1~sub_vaginal$group2)$p.value,4)
pval
p_sub_box <- ggplot(sub_vaginal) +
geom_boxplot(aes(x=group2, y=Component.1, fill=group2)) +
theme_bw() + scale_fill_manual(values=color_RB) +
labs(x="Outcome") +
theme(legend.position="none") +
annotate("text", x=1.5, y=0.22, label= paste0("p-value = ", pval))
p_sub_box
lay <- matrix(c(1,1,2,2,2,2,3,3,3),1,)
pdf('../figure_table/vaginal_plot.pdf', width=16, height=3.5)
grid.arrange(p_sub_box, p_bar, p_feat_ratio_summary, layout_matrix=lay)
dev.off()
head(ratio_vaginal)
# plot timeline
meta_ordered <- ratio_vaginal %>%
arrange(Group2) %>%
mutate(PregID=factor(subjects, levels=unique(subjects)))
ggplot(data=meta_ordered,
aes(x=DayVsConc, y=PregID,
PregOut=as.factor(PregID), color=Group2, shape=Group2)) +
geom_line() +
geom_point()  +
scale_color_manual(values=color_RB) +
labs(y="Host ID", x="Gestational Day", color="Outcome", shape="Outcome") +
theme_bw() +
theme(legend.position="bottom") +
scale_x_continuous(breaks=seq(from=84,to=294,by=28)) +
theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
geom_vline(xintercept=c(12,37)*7, linetype="dashed")
ggplot(data=meta_ordered,
aes(x=Timepoint, y=PregID,
PregOut=as.factor(PregID), color=Group2, shape=Group2)) +
geom_line() +
geom_point()  +
scale_color_manual(values=color_RB) +
labs(y="Host ID", x="Gestational Day", color="Outcome", shape="Outcome") +
theme_bw() +
theme(legend.position="bottom") +
scale_x_continuous(breaks=seq(from=84,to=294,by=28)) +
theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
geom_vline(xintercept=c(12,37)*7, linetype="dashed")
dev.off()
ggplot(data=meta_ordered,
aes(x=Timepoint, y=PregID,
PregOut=as.factor(PregID), color=Group2, shape=Group2)) +
geom_line() +
geom_point()  +
scale_color_manual(values=color_RB) +
labs(y="Host ID", x="Gestational Day", color="Outcome", shape="Outcome") +
theme_bw() +
theme(legend.position="bottom") +
scale_x_continuous(breaks=seq(from=84,to=294,by=28)) +
theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
geom_vline(xintercept=c(12,37)*7, linetype="dashed")
ggplot(data=meta_ordered,
aes(x=Timepoint, y=PregID,
PregOut=as.factor(PregID), color=Group2, shape=Group2)) +
geom_line() +
geom_point()  +
scale_color_manual(values=color_RB) +
labs(y="Host ID", x="Gestational Day", color="Outcome", shape="Outcome") +
theme_bw() +
theme(legend.position="bottom") +
scale_x_continuous(breaks=seq(from=0,to=37,by=1)) +
theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank()) +
geom_vline(xintercept=c(12,37)*7, linetype="dashed")
ggplot(data=meta_ordered,
aes(x=Timepoint, y=PregID,
PregOut=as.factor(PregID), color=Group2, shape=Group2)) +
geom_line() +
geom_point()  +
scale_color_manual(values=color_RB) +
labs(y="Host ID", x="Gestational Day", color="Outcome", shape="Outcome") +
theme_bw() +
theme(legend.position="bottom") +
scale_x_continuous(breaks=seq(from=0,to=37,by=1)) +
theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
# plot timeline
meta_ordered <- ratio_vaginal %>%
arrange(Group2, -Timepoint) %>%
mutate(PregID=factor(subjects, levels=unique(subjects)))
ggplot(data=meta_ordered,
aes(x=Timepoint, y=PregID,
PregOut=as.factor(PregID), color=Group2, shape=Group2)) +
geom_line() +
geom_point()  +
scale_color_manual(values=color_RB) +
labs(y="Host ID", x="Gestational Day", color="Outcome", shape="Outcome") +
theme_bw() +
theme(legend.position="bottom") +
scale_x_continuous(breaks=seq(from=0,to=37,by=1)) +
theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
ggplot(data=meta_ordered,
aes(x=Timepoint, y=PregID,
PregOut=as.factor(PregID), color=Group2, shape=Group2)) +
geom_line() +
geom_point()  +
scale_color_manual(values=color_RB) +
labs(y="Host ID", x="Gestational Week", color="Outcome", shape="Outcome") +
theme_bw() +
theme(legend.position="bottom") +
scale_x_continuous(breaks=seq(from=0,to=36,by=4)) +
theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
# plot timeline
meta_ordered <- ratio_vaginal %>%
arrange(Group2, -Timepoint) %>%
mutate(PregID=factor(subjects, levels=unique(subjects)))
pdf('../figure_table/vaginal_timeline.pdf', width=11.5, height=7.5)
ggplot(data=meta_ordered,
aes(x=Timepoint, y=PregID,
PregOut=as.factor(PregID), color=Group2, shape=Group2)) +
geom_line() +
geom_point()  +
scale_color_manual(values=color_RB) +
labs(y="Host ID", x="Gestational Week", color="Outcome", shape="Outcome") +
theme_bw() +
theme(legend.position="bottom") +
scale_x_continuous(breaks=seq(from=0,to=36,by=4)) +
theme(axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.grid.minor = element_blank(),
panel.grid.major = element_blank())
dev.off()
xmat <- matrix(rnorm(1000*1000), 1000,1000)
xmat <- xmat+t(xmat)
tmp <- proc.time();res <- solve(xmat);print(proc.time()-tmp)
tmp <- proc.time();res <- eigen(xmat);print(proc.time()-tmp)
tmp <- proc.time();res <- solve(xmat);print(proc.time()-tmp)
tmp <- proc.time();res <- eigen(xmat);print(proc.time()-tmp)
tmp <- proc.time();res <- eigen(xmat, symmetric = T);print(proc.time()-tmp)
tmp <- proc.time();res <- eigen(xmat, symmetric = T);print(proc.time()-tmp)
tmp <- proc.time();res <- svd(xmat);print(proc.time()-tmp)
450/24
550/24
